# This workflow will build a .NET project and upload the build artifacts to a GitHub Release
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  publish:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build -c Release --no-restore
      
    - name: Test
      run: dotnet test --no-build -c Release --verbosity normal
      
    - name : Publish Win-x64
      run: dotnet publish -c Release -r win-x64 --self-contained -p:PublishSingleFile=true -p:PublishTrimmed=false

    - name : Publish Win-x86
      run: dotnet publish -c Release -r win-x86 --self-contained -p:PublishSingleFile=true -p:PublishTrimmed=false

    - name : Publish OSX-x64
      run: dotnet publish -c Release -r osx-x64 --self-contained -p:PublishSingleFile=true -p:PublishTrimmed=false

    - name : Publish Linux-x64
      run: dotnet publish -c Release -r linux-x64 --self-contained -p:PublishSingleFile=true -p:PublishTrimmed=false

    - name: Archive Win-x64
      run: |
        mkdir __temp || true
        mkdir archive || true
        cd __temp
        cp ../WaterPurifierTimeAlert/bin/Release/net8.0/win-x64/publish/* . -r
        zip -r ../archive/WaterPurifierTimeAlert-Win64.zip .
        cd ..
        rm -rf __temp

    - name: Archive Win-x86
      run: |
        mkdir __temp || true
        mkdir archive || true
        cd __temp
        cp ../WaterPurifierTimeAlert/bin/Release/net8.0/win-x86/publish/* . -r
        zip -r ../archive/WaterPurifierTimeAlert-Win86.zip .
        cd ..
        rm -rf __temp

    - name: Archive OSX-x64
      run: |
        mkdir __temp || true
        mkdir archive || true
        cd __temp
        cp ../WaterPurifierTimeAlert/bin/Release/net8.0/osx-x64/publish/* . -r
        zip -r ../archive/WaterPurifierTimeAlert-OSX64.zip .
        cd ..
        rm -rf __temp

    - name: Archive Linux-x64
      run: |
        mkdir __temp || true
        mkdir archive || true
        cd __temp
        cp ../WaterPurifierTimeAlert/bin/Release/net8.0/linux-x64/publish/* . -r
        zip -r ../archive/WaterPurifierTimeAlert-Linux64.zip .
        cd ..
        rm -rf __temp

    - name: Get Project Version
      uses: bbonkr/get-version-action@v1
      id: project_version
      with:
        project: "./WaterPurifierTimeAlert/WaterPurifierTimeAlert.csproj"      

    - name: Create Git Tag
      id: create_tag
      run: |
        TAG_NAME=v${{ steps.project_version.outputs.version }}
        git tag $TAG_NAME -d || true
        git tag $TAG_NAME
        git push origin --delete $TAG_NAME || true
        git push origin $TAG_NAME
        echo "tag_name=$TAG_NAME" >> $GITHUB_ENV
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Delete existing release
      run: |
        TAG_NAME=${{ env.tag_name }}
        gh release delete $TAG_NAME -y || true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: archive/**
        tag_name: ${{ env.tag_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}